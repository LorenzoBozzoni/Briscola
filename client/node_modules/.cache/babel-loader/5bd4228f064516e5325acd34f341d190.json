{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loreb\\\\Documents\\\\Unipr\\\\Terzo_anno\\\\Primo_semestre\\\\Tecnologie_internet\\\\Briscola\\\\client\\\\src\\\\components\\\\InitialPage.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { socket } from '../components/LoginPage.js';\nimport { notify } from '../App.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Navbar } from './Navbar.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ReactSession } from 'react-client-session';\nimport { Wallpaper } from './Wallpaper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class InitialPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      visibilitySpinner: \"hidden\",\n      username: \"\"\n    };\n  }\n  componentDidMount() {\n    const username = ReactSession.get(\"User\");\n    this.setState({\n      username: username\n    });\n\n    // Se username è undefined vuol dire che non è stato fatto l'accesso, si viene reindirizzati alla home del sito\n    if (username === undefined) {\n      notify(\"non hai fatto il login\");\n      document.location.href = \"/\";\n    }\n\n    // Aggioranto ID associato allo user, necessario per tenere traccia del giocatore dopo disconnessione causata dal cambiamento di pagina\n    socket.emit(\"AggiornaID\", username);\n\n    // Evento di richiesta di partita da parte di un amico\n    socket.off(\"RichiestaInizioPartita\").on(\"RichiestaInizioPartita\", userAmico => {\n      notify(\"Evento partita amico arrivato\");\n      var risposta = window.prompt(userAmico + \" ti sta invitando per una partita, accetti? (si/no)\");\n      notify(risposta);\n      if (risposta.toLowerCase() === \"si\") {\n        //socket.emit(\"AggiornaID\", username)\n        socket.emit(\"RispostaPartitaAmico\", risposta, userAmico);\n        //const navigate = useHook()\n        this.props.navigate(\"/selectGame/partita\");\n        //document.location.href = document.location + \"/partita\"; \n        window.alert(\"bloccante\");\n      }\n    });\n  }\n  switchSpinnerState() {\n    if (this.state.visibilitySpinner === \"hidden\") this.setState({\n      visibilitySpinner: \"visible\"\n    });else this.setState({\n      visibilitySpinner: \"hidden\"\n    });\n  }\n\n  // Funzione per emettere evento bottone per scelta tipologia di partita da giocare\n  gameTypeSelected(modalità) {\n    if (modalità !== \"friend\") {\n      socket.emit('gameTypeSelected', modalità, null);\n    } else {\n      var friend = window.prompt(\"Inserisci l'username dell'avversario\");\n      if (friend.trim() === \"\" || friend === null) {\n        notify(\"Username inserito non valido\");\n      } else {\n        socket.emit('gameTypeSelected', modalità, friend);\n      }\n    }\n    this.setState({\n      visibilitySpinner: \"visible\"\n    }); // TODO: rimuovere\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        PlayerUsername: this.state.username,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          id: \"spinner\",\n          style: {\n            visibility: this.state.visibilitySpinner\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            style: {\n              visibility: this.state.visibilitySpinner\n            },\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2 mx-auto\",\n        style: {\n          \"height\": \"95vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"./partita\",\n          className: \"btn btn-primary\",\n          id: \"MultiGameButton\",\n          onClick: () => this.gameTypeSelected(\"multi\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"gameTypeLabel\",\n            children: \"RANDOM PLAYER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./partita\",\n          className: \"btn btn-primary\",\n          id: \"FriendGameButton\",\n          onClick: () => this.gameTypeSelected(\"friend\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"gameTypeLabel\",\n            children: \"PLAY WITH A FRIEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n// Functional component che incapsula il class component InitialPage per poter sfruttare useNavigate() di react-router-dom\nexport function InitialPageWithRoute(props) {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(InitialPage, {\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }, this);\n}\n_s(InitialPageWithRoute, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = InitialPageWithRoute;\nvar _c;\n$RefreshReg$(_c, \"InitialPageWithRoute\");","map":{"version":3,"names":["React","Component","Link","useNavigate","socket","notify","ToastContainer","toast","Navbar","ReactSession","Wallpaper","InitialPage","state","visibilitySpinner","username","componentDidMount","get","setState","undefined","document","location","href","emit","off","on","userAmico","risposta","window","prompt","toLowerCase","props","navigate","alert","switchSpinnerState","gameTypeSelected","modalità","friend","trim","render","visibility","height","InitialPageWithRoute"],"sources":["C:/Users/loreb/Documents/Unipr/Terzo_anno/Primo_semestre/Tecnologie_internet/Briscola/client/src/components/InitialPage.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport {socket} from '../components/LoginPage.js'\r\nimport { notify } from '../App.js'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {Navbar} from './Navbar.js'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ReactSession } from 'react-client-session';\r\nimport { Wallpaper } from './Wallpaper';\r\n\r\n\r\nexport class InitialPage extends Component {\r\n  state = {\r\n    visibilitySpinner: \"hidden\",\r\n    username :\"\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    const username = ReactSession.get(\"User\");\r\n    this.setState({username:username})\r\n    \r\n    // Se username è undefined vuol dire che non è stato fatto l'accesso, si viene reindirizzati alla home del sito\r\n    if (username === undefined){\r\n      notify(\"non hai fatto il login\")\r\n      document.location.href = \"/\"; \r\n    }\r\n\r\n    // Aggioranto ID associato allo user, necessario per tenere traccia del giocatore dopo disconnessione causata dal cambiamento di pagina\r\n    socket.emit(\"AggiornaID\", username)\r\n\r\n    // Evento di richiesta di partita da parte di un amico\r\n    socket.off(\"RichiestaInizioPartita\").on(\"RichiestaInizioPartita\", (userAmico) => {\r\n      notify(\"Evento partita amico arrivato\")\r\n      var risposta = window.prompt(userAmico + \" ti sta invitando per una partita, accetti? (si/no)\")\r\n      notify(risposta)\r\n      if (risposta.toLowerCase() === \"si\"){\r\n        //socket.emit(\"AggiornaID\", username)\r\n        socket.emit(\"RispostaPartitaAmico\", risposta, userAmico)\r\n        //const navigate = useHook()\r\n        this.props.navigate(\"/selectGame/partita\")\r\n        //document.location.href = document.location + \"/partita\"; \r\n        window.alert(\"bloccante\")\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  switchSpinnerState(){\r\n    if (this.state.visibilitySpinner === \"hidden\")\r\n        this.setState({visibilitySpinner:\"visible\"})\r\n    else            \r\n        this.setState({visibilitySpinner:\"hidden\"}) \r\n  } \r\n\r\n  // Funzione per emettere evento bottone per scelta tipologia di partita da giocare\r\n  gameTypeSelected(modalità){\r\n    if (modalità !== \"friend\"){\r\n       socket.emit('gameTypeSelected', modalità, null);\r\n    }else{\r\n      var friend = window.prompt(\"Inserisci l'username dell'avversario\")\r\n      if (friend.trim() === \"\" || friend === null){\r\n        notify(\"Username inserito non valido\")\r\n      }else{\r\n        socket.emit('gameTypeSelected', modalità, friend);\r\n      }\r\n      \r\n    }\r\n    \r\n    this.setState({visibilitySpinner:\"visible\"})   // TODO: rimuovere\r\n  }\r\n  \r\n  render (){\r\n    return(\r\n    <>\r\n    <Navbar PlayerUsername={this.state.username}>    \r\n    <div className=\"spinner-border text-primary\" role=\"status\" id=\"spinner\" style={{ visibility: this.state.visibilitySpinner }}>\r\n              <span className=\"visually-hidden\" style={{ visibility: this.state.visibilitySpinner }}>Loading...</span>\r\n            </div>\r\n    </Navbar>\r\n    <div className=\"d-grid gap-2 mx-auto\" style={{\"height\":\"95vh\"}}>\r\n      <Link to=\"./partita\" className=\"btn btn-primary\" id=\"MultiGameButton\" onClick={() => this.gameTypeSelected(\"multi\")}>\r\n        <p className='gameTypeLabel'>RANDOM PLAYER</p>\r\n      </Link>\r\n\r\n      <Link to=\"./partita\" className=\"btn btn-primary\" id=\"FriendGameButton\" onClick={() => this.gameTypeSelected(\"friend\")}>\r\n        <p className='gameTypeLabel'>PLAY WITH A FRIEND</p>\r\n      </Link>\r\n    </div>\r\n    <div style={{height:\"0px\"}}>\r\n        <ToastContainer/>\r\n    </div>\r\n\r\n    </>\r\n  )}\r\n}\r\n\r\n// Functional component che incapsula il class component InitialPage per poter sfruttare useNavigate() di react-router-dom\r\nexport function InitialPageWithRoute(props) {\r\n  const navigate = useNavigate()\r\n  return (<InitialPage navigate={navigate}></InitialPage>)\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loreb\\\\Documents\\\\Unipr\\\\Terzo_anno\\\\Primo_semestre\\\\Tecnologie_internet\\\\Briscola\\\\client\\\\src\\\\components\\\\InitialPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { socket } from '../components/LoginPage.js';\nimport { notify } from '../App.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Navbar } from './Navbar.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ReactSession } from 'react-client-session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst id = socket.id;\nconst singolo = require(\"../Images/Singolo.jpg\");\nconst multi = require(\"../Images/ConAvversari.jpg\");\nconst friend = require(\"../Images/ConAvversario1.jpg\");\nexport class InitialPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      visibilitySpinner: \"hidden\",\n      username: \"\"\n    };\n  }\n  componentDidMount() {\n    const username = ReactSession.get(\"User\");\n    this.setState({\n      username: username\n    });\n    if (username === undefined) {\n      notify(\"non hai fatto il login\");\n      document.location.href = \"/\";\n    }\n    socket.emit(\"AggiornaID\", username);\n    //notify(\"mounting component \" + window.localStorage.getItem(\"IdSocket\"))\n    /*\r\n    notify(\"mounting component \" + window.localStorage.getItem(\"SocketId\"))\r\n      const playerSocketId = socket.id\r\n    this.setState({playerId:playerSocketId})\r\n    */\n    //notify(window.localStorage.getItem(\"User\"))\n    //this.setState({user:})\n    /*\r\n    window.addEventListener(\"beforeunload\", (event) => {\r\n      window.localStorage.setItem(\"User\",this.state.playerId)\r\n    })\r\n    */\n\n    socket.off(\"RichiestaInizioPartita\").on(\"RichiestaInizioPartita\", userAmico => {\n      notify(\"Evento partita amico arrivato\");\n      var risposta = window.prompt(userAmico + \" ti sta invitando per una partita, accetti? (si/no)\");\n      notify(risposta);\n      if (risposta.toLowerCase() === \"si\") {\n        socket.emit(\"RispostaPartitaAmico\", risposta, userAmico);\n        document.location.href = document.location + \"/partita\";\n      }\n    });\n  }\n  switchSpinnerState() {\n    if (this.state.visibilitySpinner === \"hidden\") this.setState({\n      visibilitySpinner: \"visible\"\n    });else this.setState({\n      visibilitySpinner: \"hidden\"\n    });\n  }\n  gameTypeSelected(modalità) {\n    if (modalità !== \"friend\") {\n      socket.emit('gameTypeSelected', modalità, null);\n    } else {\n      var friend = window.prompt(\"Inserisci l'username dell'avversario\");\n      if (friend.trim() === \"\" || friend === null) {\n        notify(\"Username inserito non valido\");\n      } else {\n        socket.emit('gameTypeSelected', modalità, friend);\n      }\n    }\n    this.setState({\n      visibilitySpinner: \"visible\"\n    });\n    // Nell'attesa della risposta (evento socket partitaIniziata) si potrebbe rendere visibile il simbolo di attesa\n    //await fetch(\"./Partita\")\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        PlayerId: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2 mx-auto\",\n        style: {\n          \"height\": \"95vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"./partita\",\n          className: \"btn btn-primary\",\n          id: \"SingleGameButton\",\n          onClick: () => this.gameTypeSelected(\"single\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"gameTypeLabel\",\n            children: \"SINGLE PLAYER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./partita\",\n          className: \"btn btn-primary\",\n          id: \"MultiGameButton\",\n          onClick: () => this.gameTypeSelected(\"multi\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"gameTypeLabel\",\n            children: \"RANDOM PLAYER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./partita\",\n          className: \"btn btn-primary\",\n          id: \"FriendGameButton\",\n          onClick: () => this.gameTypeSelected(\"friend\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"gameTypeLabel\",\n            children: \"PLAY WITH A FRIEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n}\n//<Link to=\"./partita\">Single Player</Link>\n\n/*\r\n      <div className=\"spinner-border text-primary\" role=\"status\" id=\"spinner\" style={{visibility:this.state.visibilitySpinner}}>\r\n        <span className=\"visually-hidden\"  style={{visibility:this.state.visibilitySpinner}}>Loading...</span>\r\n    </div>\r\n\r\n\r\n\r\n<div className=\"d-grid gap-2 d-md-block\">\r\n      <Link to=\"./partita\">\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.gameTypeSelected(\"single\")}>Single Player</button>\r\n      </Link>\r\n      <Link to=\"./partita\">\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.gameTypeSelected(\"multi\")}>Random multiplayer</button>\r\n      </Link>\r\n      \r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.gameTypeSelected(\"friend\")}>Play with a friend</button>\r\n    </div>\r\n\r\n\r\nPer centrare il testo dentro il button, non funziona\r\n\r\n    <p className=\"text-center\">Random multiplayer</p> \r\n*/","map":{"version":3,"names":["React","Component","Link","socket","notify","ToastContainer","toast","Navbar","ReactSession","id","singolo","require","multi","friend","InitialPage","state","visibilitySpinner","username","componentDidMount","get","setState","undefined","document","location","href","emit","off","on","userAmico","risposta","window","prompt","toLowerCase","switchSpinnerState","gameTypeSelected","modalità","trim","render","height"],"sources":["C:/Users/loreb/Documents/Unipr/Terzo_anno/Primo_semestre/Tecnologie_internet/Briscola/client/src/components/InitialPage.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {socket} from '../components/LoginPage.js'\r\nimport { notify } from '../App.js'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {Navbar} from './Navbar.js'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ReactSession } from 'react-client-session';\r\n\r\nconst id = socket.id\r\nconst singolo = require(\"../Images/Singolo.jpg\")\r\nconst multi = require(\"../Images/ConAvversari.jpg\")\r\nconst friend = require(\"../Images/ConAvversario1.jpg\")\r\n\r\n\r\nexport class InitialPage extends Component {\r\n  state = {\r\n    visibilitySpinner: \"hidden\",\r\n    username :\"\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    const username = ReactSession.get(\"User\");\r\n    \r\n    this.setState({username:username})\r\n    if (username === undefined){\r\n      notify(\"non hai fatto il login\")\r\n      document.location.href = \"/\"; \r\n    }\r\n    socket.emit(\"AggiornaID\", username)\r\n    //notify(\"mounting component \" + window.localStorage.getItem(\"IdSocket\"))\r\n    /*\r\n    notify(\"mounting component \" + window.localStorage.getItem(\"SocketId\"))\r\n\r\n    const playerSocketId = socket.id\r\n    this.setState({playerId:playerSocketId})\r\n    */\r\n   //notify(window.localStorage.getItem(\"User\"))\r\n   //this.setState({user:})\r\n    /*\r\n    window.addEventListener(\"beforeunload\", (event) => {\r\n      window.localStorage.setItem(\"User\",this.state.playerId)\r\n    })\r\n    */\r\n\r\n    socket.off(\"RichiestaInizioPartita\").on(\"RichiestaInizioPartita\", (userAmico) => {\r\n      notify(\"Evento partita amico arrivato\")\r\n      var risposta = window.prompt(userAmico + \" ti sta invitando per una partita, accetti? (si/no)\")\r\n      notify(risposta)\r\n      if (risposta.toLowerCase() === \"si\"){\r\n        socket.emit(\"RispostaPartitaAmico\", risposta, userAmico)\r\n        document.location.href = document.location + \"/partita\"; \r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  switchSpinnerState(){\r\n    if (this.state.visibilitySpinner === \"hidden\")\r\n        this.setState({visibilitySpinner:\"visible\"})\r\n    else            \r\n        this.setState({visibilitySpinner:\"hidden\"}) \r\n  } \r\n\r\n  gameTypeSelected(modalità){\r\n    if (modalità !== \"friend\"){\r\n       socket.emit('gameTypeSelected', modalità, null);\r\n    }else{\r\n      var friend = window.prompt(\"Inserisci l'username dell'avversario\")\r\n      if (friend.trim() === \"\" || friend === null){\r\n        notify(\"Username inserito non valido\")\r\n      }else{\r\n        socket.emit('gameTypeSelected', modalità, friend);\r\n      }\r\n      \r\n    }\r\n    \r\n    this.setState({visibilitySpinner:\"visible\"})\r\n    // Nell'attesa della risposta (evento socket partitaIniziata) si potrebbe rendere visibile il simbolo di attesa\r\n    //await fetch(\"./Partita\")\r\n  }\r\n  \r\n  render (){\r\n    return(\r\n    <>\r\n    <Navbar PlayerId={this.state.username}>    \r\n\r\n    </Navbar>\r\n    <div className=\"d-grid gap-2 mx-auto\" style={{\"height\":\"95vh\"}}>\r\n      <Link to=\"./partita\" className=\"btn btn-primary\" id=\"SingleGameButton\" onClick={() => this.gameTypeSelected(\"single\")}>\r\n        <p className='gameTypeLabel'>SINGLE PLAYER</p>\r\n      </Link>\r\n      <Link to=\"./partita\" className=\"btn btn-primary\" id=\"MultiGameButton\" onClick={() => this.gameTypeSelected(\"multi\")}>\r\n        <p className='gameTypeLabel'>RANDOM PLAYER</p>\r\n      </Link>\r\n\r\n      <Link to=\"./partita\" className=\"btn btn-primary\" id=\"FriendGameButton\" onClick={() => this.gameTypeSelected(\"friend\")}>\r\n        <p className='gameTypeLabel'>PLAY WITH A FRIEND</p>\r\n      </Link>\r\n    </div>\r\n    <div style={{height:\"0px\"}}>\r\n        <ToastContainer/>\r\n    </div>\r\n\r\n    </>\r\n  )}\r\n}\r\n//<Link to=\"./partita\">Single Player</Link>\r\n\r\n\r\n/*\r\n      <div className=\"spinner-border text-primary\" role=\"status\" id=\"spinner\" style={{visibility:this.state.visibilitySpinner}}>\r\n        <span className=\"visually-hidden\"  style={{visibility:this.state.visibilitySpinner}}>Loading...</span>\r\n    </div>\r\n\r\n\r\n\r\n<div className=\"d-grid gap-2 d-md-block\">\r\n      <Link to=\"./partita\">\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.gameTypeSelected(\"single\")}>Single Player</button>\r\n      </Link>\r\n      <Link to=\"./partita\">\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.gameTypeSelected(\"multi\")}>Random multiplayer</button>\r\n      </Link>\r\n      \r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.gameTypeSelected(\"friend\")}>Play with a friend</button>\r\n    </div>\r\n\r\n\r\nPer centrare il testo dentro il button, non funziona\r\n\r\n    <p className=\"text-center\">Random multiplayer</p> \r\n*/\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const dangerouslyDisableDefaultSrc = Symbol(\"dangerouslyDisableDefaultSrc\");\nconst DEFAULT_DIRECTIVES = {\n  \"default-src\": [\"'self'\"],\n  \"base-uri\": [\"'self'\"],\n  \"font-src\": [\"'self'\", \"https:\", \"data:\"],\n  \"form-action\": [\"'self'\"],\n  \"frame-ancestors\": [\"'self'\"],\n  \"img-src\": [\"'self'\", \"data:\"],\n  \"object-src\": [\"'none'\"],\n  \"script-src\": [\"'self'\"],\n  \"script-src-attr\": [\"'none'\"],\n  \"style-src\": [\"'self'\", \"https:\", \"'unsafe-inline'\"],\n  \"upgrade-insecure-requests\": []\n};\nconst getDefaultDirectives = () => Object.assign({}, DEFAULT_DIRECTIVES);\nconst dashify = str => str.replace(/[A-Z]/g, capitalLetter => \"-\" + capitalLetter.toLowerCase());\nconst isDirectiveValueInvalid = directiveValue => /;|,/.test(directiveValue);\nconst has = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\nfunction normalizeDirectives(options) {\n  const defaultDirectives = getDefaultDirectives();\n  const {\n    useDefaults = true,\n    directives: rawDirectives = defaultDirectives\n  } = options;\n  const result = new Map();\n  const directiveNamesSeen = new Set();\n  const directivesExplicitlyDisabled = new Set();\n  for (const rawDirectiveName in rawDirectives) {\n    if (!has(rawDirectives, rawDirectiveName)) {\n      continue;\n    }\n    if (rawDirectiveName.length === 0 || /[^a-zA-Z0-9-]/.test(rawDirectiveName)) {\n      throw new Error(`Content-Security-Policy received an invalid directive name ${JSON.stringify(rawDirectiveName)}`);\n    }\n    const directiveName = dashify(rawDirectiveName);\n    if (directiveNamesSeen.has(directiveName)) {\n      throw new Error(`Content-Security-Policy received a duplicate directive ${JSON.stringify(directiveName)}`);\n    }\n    directiveNamesSeen.add(directiveName);\n    const rawDirectiveValue = rawDirectives[rawDirectiveName];\n    let directiveValue;\n    if (rawDirectiveValue === null) {\n      if (directiveName === \"default-src\") {\n        throw new Error(\"Content-Security-Policy needs a default-src but it was set to `null`. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\");\n      }\n      directivesExplicitlyDisabled.add(directiveName);\n      continue;\n    } else if (typeof rawDirectiveValue === \"string\") {\n      directiveValue = [rawDirectiveValue];\n    } else if (!rawDirectiveValue) {\n      throw new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`);\n    } else if (rawDirectiveValue === dangerouslyDisableDefaultSrc) {\n      if (directiveName === \"default-src\") {\n        directivesExplicitlyDisabled.add(\"default-src\");\n        continue;\n      } else {\n        throw new Error(`Content-Security-Policy: tried to disable ${JSON.stringify(directiveName)} as if it were default-src; simply omit the key`);\n      }\n    } else {\n      directiveValue = rawDirectiveValue;\n    }\n    for (const element of directiveValue) {\n      if (typeof element === \"string\" && isDirectiveValueInvalid(element)) {\n        throw new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`);\n      }\n    }\n    result.set(directiveName, directiveValue);\n  }\n  if (useDefaults) {\n    Object.entries(defaultDirectives).forEach(_ref => {\n      let [defaultDirectiveName, defaultDirectiveValue] = _ref;\n      if (!result.has(defaultDirectiveName) && !directivesExplicitlyDisabled.has(defaultDirectiveName)) {\n        result.set(defaultDirectiveName, defaultDirectiveValue);\n      }\n    });\n  }\n  if (!result.size) {\n    throw new Error(\"Content-Security-Policy has no directives. Either set some or disable the header\");\n  }\n  if (!result.has(\"default-src\") && !directivesExplicitlyDisabled.has(\"default-src\")) {\n    throw new Error(\"Content-Security-Policy needs a default-src but none was provided. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\");\n  }\n  return result;\n}\nfunction getHeaderValue(req, res, normalizedDirectives) {\n  let err;\n  const result = [];\n  normalizedDirectives.forEach((rawDirectiveValue, directiveName) => {\n    let directiveValue = \"\";\n    for (const element of rawDirectiveValue) {\n      directiveValue += \" \" + (element instanceof Function ? element(req, res) : element);\n    }\n    if (!directiveValue) {\n      result.push(directiveName);\n    } else if (isDirectiveValueInvalid(directiveValue)) {\n      err = new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`);\n    } else {\n      result.push(`${directiveName}${directiveValue}`);\n    }\n  });\n  return err ? err : result.join(\";\");\n}\nconst contentSecurityPolicy = function contentSecurityPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerName = options.reportOnly ? \"Content-Security-Policy-Report-Only\" : \"Content-Security-Policy\";\n  const normalizedDirectives = normalizeDirectives(options);\n  return function contentSecurityPolicyMiddleware(req, res, next) {\n    const result = getHeaderValue(req, res, normalizedDirectives);\n    if (result instanceof Error) {\n      next(result);\n    } else {\n      res.setHeader(headerName, result);\n      next();\n    }\n  };\n};\ncontentSecurityPolicy.getDefaultDirectives = getDefaultDirectives;\ncontentSecurityPolicy.dangerouslyDisableDefaultSrc = dangerouslyDisableDefaultSrc;\nconst ALLOWED_POLICIES$2 = new Set([\"require-corp\", \"credentialless\"]);\nfunction getHeaderValueFromOptions$7(_ref2) {\n  let {\n    policy = \"require-corp\"\n  } = _ref2;\n  if (ALLOWED_POLICIES$2.has(policy)) {\n    return policy;\n  } else {\n    throw new Error(`Cross-Origin-Embedder-Policy does not support the ${JSON.stringify(policy)} policy`);\n  }\n}\nfunction crossOriginEmbedderPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$7(options);\n  return function crossOriginEmbedderPolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Cross-Origin-Embedder-Policy\", headerValue);\n    next();\n  };\n}\nconst ALLOWED_POLICIES$1 = new Set([\"same-origin\", \"same-origin-allow-popups\", \"unsafe-none\"]);\nfunction getHeaderValueFromOptions$6(_ref3) {\n  let {\n    policy = \"same-origin\"\n  } = _ref3;\n  if (ALLOWED_POLICIES$1.has(policy)) {\n    return policy;\n  } else {\n    throw new Error(`Cross-Origin-Opener-Policy does not support the ${JSON.stringify(policy)} policy`);\n  }\n}\nfunction crossOriginOpenerPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$6(options);\n  return function crossOriginOpenerPolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Cross-Origin-Opener-Policy\", headerValue);\n    next();\n  };\n}\nconst ALLOWED_POLICIES = new Set([\"same-origin\", \"same-site\", \"cross-origin\"]);\nfunction getHeaderValueFromOptions$5(_ref4) {\n  let {\n    policy = \"same-origin\"\n  } = _ref4;\n  if (ALLOWED_POLICIES.has(policy)) {\n    return policy;\n  } else {\n    throw new Error(`Cross-Origin-Resource-Policy does not support the ${JSON.stringify(policy)} policy`);\n  }\n}\nfunction crossOriginResourcePolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$5(options);\n  return function crossOriginResourcePolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Cross-Origin-Resource-Policy\", headerValue);\n    next();\n  };\n}\nfunction parseMaxAge$1() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  if (value >= 0 && Number.isFinite(value)) {\n    return Math.floor(value);\n  } else {\n    throw new Error(`Expect-CT: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`);\n  }\n}\nfunction getHeaderValueFromOptions$4(options) {\n  const directives = [`max-age=${parseMaxAge$1(options.maxAge)}`];\n  if (options.enforce) {\n    directives.push(\"enforce\");\n  }\n  if (options.reportUri) {\n    directives.push(`report-uri=\"${options.reportUri}\"`);\n  }\n  return directives.join(\", \");\n}\nfunction expectCt() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$4(options);\n  return function expectCtMiddleware(_req, res, next) {\n    res.setHeader(\"Expect-CT\", headerValue);\n    next();\n  };\n}\nfunction originAgentCluster() {\n  return function originAgentClusterMiddleware(_req, res, next) {\n    res.setHeader(\"Origin-Agent-Cluster\", \"?1\");\n    next();\n  };\n}\nconst ALLOWED_TOKENS = new Set([\"no-referrer\", \"no-referrer-when-downgrade\", \"same-origin\", \"origin\", \"strict-origin\", \"origin-when-cross-origin\", \"strict-origin-when-cross-origin\", \"unsafe-url\", \"\"]);\nfunction getHeaderValueFromOptions$3(_ref5) {\n  let {\n    policy = [\"no-referrer\"]\n  } = _ref5;\n  const tokens = typeof policy === \"string\" ? [policy] : policy;\n  if (tokens.length === 0) {\n    throw new Error(\"Referrer-Policy received no policy tokens\");\n  }\n  const tokensSeen = new Set();\n  tokens.forEach(token => {\n    if (!ALLOWED_TOKENS.has(token)) {\n      throw new Error(`Referrer-Policy received an unexpected policy token ${JSON.stringify(token)}`);\n    } else if (tokensSeen.has(token)) {\n      throw new Error(`Referrer-Policy received a duplicate policy token ${JSON.stringify(token)}`);\n    }\n    tokensSeen.add(token);\n  });\n  return tokens.join(\",\");\n}\nfunction referrerPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$3(options);\n  return function referrerPolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Referrer-Policy\", headerValue);\n    next();\n  };\n}\nconst DEFAULT_MAX_AGE = 180 * 24 * 60 * 60;\nfunction parseMaxAge() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MAX_AGE;\n  if (value >= 0 && Number.isFinite(value)) {\n    return Math.floor(value);\n  } else {\n    throw new Error(`Strict-Transport-Security: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`);\n  }\n}\nfunction getHeaderValueFromOptions$2(options) {\n  if (\"maxage\" in options) {\n    throw new Error(\"Strict-Transport-Security received an unsupported property, `maxage`. Did you mean to pass `maxAge`?\");\n  }\n  if (\"includeSubdomains\" in options) {\n    console.warn('Strict-Transport-Security middleware should use `includeSubDomains` instead of `includeSubdomains`. (The correct one has an uppercase \"D\".)');\n  }\n  if (\"setIf\" in options) {\n    console.warn(\"Strict-Transport-Security middleware no longer supports the `setIf` parameter. See the documentation and <https://github.com/helmetjs/helmet/wiki/Conditionally-using-middleware> if you need help replicating this behavior.\");\n  }\n  const directives = [`max-age=${parseMaxAge(options.maxAge)}`];\n  if (options.includeSubDomains === undefined || options.includeSubDomains) {\n    directives.push(\"includeSubDomains\");\n  }\n  if (options.preload) {\n    directives.push(\"preload\");\n  }\n  return directives.join(\"; \");\n}\nfunction strictTransportSecurity() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$2(options);\n  return function strictTransportSecurityMiddleware(_req, res, next) {\n    res.setHeader(\"Strict-Transport-Security\", headerValue);\n    next();\n  };\n}\nfunction xContentTypeOptions() {\n  return function xContentTypeOptionsMiddleware(_req, res, next) {\n    res.setHeader(\"X-Content-Type-Options\", \"nosniff\");\n    next();\n  };\n}\nfunction xDnsPrefetchControl() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = options.allow ? \"on\" : \"off\";\n  return function xDnsPrefetchControlMiddleware(_req, res, next) {\n    res.setHeader(\"X-DNS-Prefetch-Control\", headerValue);\n    next();\n  };\n}\nfunction xDownloadOptions() {\n  return function xDownloadOptionsMiddleware(_req, res, next) {\n    res.setHeader(\"X-Download-Options\", \"noopen\");\n    next();\n  };\n}\nfunction getHeaderValueFromOptions$1(_ref6) {\n  let {\n    action = \"sameorigin\"\n  } = _ref6;\n  const normalizedAction = typeof action === \"string\" ? action.toUpperCase() : action;\n  switch (normalizedAction) {\n    case \"SAME-ORIGIN\":\n      return \"SAMEORIGIN\";\n    case \"DENY\":\n    case \"SAMEORIGIN\":\n      return normalizedAction;\n    default:\n      throw new Error(`X-Frame-Options received an invalid action ${JSON.stringify(action)}`);\n  }\n}\nfunction xFrameOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$1(options);\n  return function xFrameOptionsMiddleware(_req, res, next) {\n    res.setHeader(\"X-Frame-Options\", headerValue);\n    next();\n  };\n}\nconst ALLOWED_PERMITTED_POLICIES = new Set([\"none\", \"master-only\", \"by-content-type\", \"all\"]);\nfunction getHeaderValueFromOptions(_ref7) {\n  let {\n    permittedPolicies = \"none\"\n  } = _ref7;\n  if (ALLOWED_PERMITTED_POLICIES.has(permittedPolicies)) {\n    return permittedPolicies;\n  } else {\n    throw new Error(`X-Permitted-Cross-Domain-Policies does not support ${JSON.stringify(permittedPolicies)}`);\n  }\n}\nfunction xPermittedCrossDomainPolicies() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions(options);\n  return function xPermittedCrossDomainPoliciesMiddleware(_req, res, next) {\n    res.setHeader(\"X-Permitted-Cross-Domain-Policies\", headerValue);\n    next();\n  };\n}\nfunction xPoweredBy() {\n  return function xPoweredByMiddleware(_req, res, next) {\n    res.removeHeader(\"X-Powered-By\");\n    next();\n  };\n}\nfunction xXssProtection() {\n  return function xXssProtectionMiddleware(_req, res, next) {\n    res.setHeader(\"X-XSS-Protection\", \"0\");\n    next();\n  };\n}\nfunction getArgs(option) {\n  let middlewareConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (option) {\n    case undefined:\n    case true:\n      return [];\n    case false:\n      return null;\n    default:\n      if (middlewareConfig.takesOptions === false) {\n        console.warn(`${middlewareConfig.name} does not take options. Remove the property to silence this warning.`);\n        return [];\n      } else {\n        return [option];\n      }\n  }\n}\nfunction getMiddlewareFunctionsFromOptions(options) {\n  const result = [];\n  const contentSecurityPolicyArgs = getArgs(options.contentSecurityPolicy);\n  if (contentSecurityPolicyArgs) {\n    result.push(contentSecurityPolicy(...contentSecurityPolicyArgs));\n  }\n  const crossOriginEmbedderPolicyArgs = getArgs(options.crossOriginEmbedderPolicy, {\n    name: \"crossOriginEmbedderPolicy\",\n    takesOptions: false\n  });\n  if (crossOriginEmbedderPolicyArgs) {\n    result.push(crossOriginEmbedderPolicy());\n  }\n  const crossOriginOpenerPolicyArgs = getArgs(options.crossOriginOpenerPolicy);\n  if (crossOriginOpenerPolicyArgs) {\n    result.push(crossOriginOpenerPolicy(...crossOriginOpenerPolicyArgs));\n  }\n  const crossOriginResourcePolicyArgs = getArgs(options.crossOriginResourcePolicy);\n  if (crossOriginResourcePolicyArgs) {\n    result.push(crossOriginResourcePolicy(...crossOriginResourcePolicyArgs));\n  }\n  const xDnsPrefetchControlArgs = getArgs(options.dnsPrefetchControl);\n  if (xDnsPrefetchControlArgs) {\n    result.push(xDnsPrefetchControl(...xDnsPrefetchControlArgs));\n  }\n  const expectCtArgs = options.expectCt && getArgs(options.expectCt);\n  if (expectCtArgs) {\n    result.push(expectCt(...expectCtArgs));\n  }\n  const xFrameOptionsArgs = getArgs(options.frameguard);\n  if (xFrameOptionsArgs) {\n    result.push(xFrameOptions(...xFrameOptionsArgs));\n  }\n  const xPoweredByArgs = getArgs(options.hidePoweredBy, {\n    name: \"hidePoweredBy\",\n    takesOptions: false\n  });\n  if (xPoweredByArgs) {\n    result.push(xPoweredBy());\n  }\n  const strictTransportSecurityArgs = getArgs(options.hsts);\n  if (strictTransportSecurityArgs) {\n    result.push(strictTransportSecurity(...strictTransportSecurityArgs));\n  }\n  const xDownloadOptionsArgs = getArgs(options.ieNoOpen, {\n    name: \"ieNoOpen\",\n    takesOptions: false\n  });\n  if (xDownloadOptionsArgs) {\n    result.push(xDownloadOptions());\n  }\n  const xContentTypeOptionsArgs = getArgs(options.noSniff, {\n    name: \"noSniff\",\n    takesOptions: false\n  });\n  if (xContentTypeOptionsArgs) {\n    result.push(xContentTypeOptions());\n  }\n  const originAgentClusterArgs = getArgs(options.originAgentCluster, {\n    name: \"originAgentCluster\",\n    takesOptions: false\n  });\n  if (originAgentClusterArgs) {\n    result.push(originAgentCluster());\n  }\n  const xPermittedCrossDomainPoliciesArgs = getArgs(options.permittedCrossDomainPolicies);\n  if (xPermittedCrossDomainPoliciesArgs) {\n    result.push(xPermittedCrossDomainPolicies(...xPermittedCrossDomainPoliciesArgs));\n  }\n  const referrerPolicyArgs = getArgs(options.referrerPolicy);\n  if (referrerPolicyArgs) {\n    result.push(referrerPolicy(...referrerPolicyArgs));\n  }\n  const xXssProtectionArgs = getArgs(options.xssFilter, {\n    name: \"xssFilter\",\n    takesOptions: false\n  });\n  if (xXssProtectionArgs) {\n    result.push(xXssProtection());\n  }\n  return result;\n}\nconst helmet = Object.assign(function helmet() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _a;\n  if (((_a = options.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"IncomingMessage\") {\n    throw new Error(\"It appears you have done something like `app.use(helmet)`, but it should be `app.use(helmet())`.\");\n  }\n  const middlewareFunctions = getMiddlewareFunctionsFromOptions(options);\n  return function helmetMiddleware(req, res, next) {\n    let middlewareIndex = 0;\n    (function internalNext(err) {\n      if (err) {\n        next(err);\n        return;\n      }\n      const middlewareFunction = middlewareFunctions[middlewareIndex];\n      if (middlewareFunction) {\n        middlewareIndex++;\n        middlewareFunction(req, res, internalNext);\n      } else {\n        next();\n      }\n    })();\n  };\n}, {\n  contentSecurityPolicy,\n  crossOriginEmbedderPolicy,\n  crossOriginOpenerPolicy,\n  crossOriginResourcePolicy,\n  dnsPrefetchControl: xDnsPrefetchControl,\n  expectCt,\n  frameguard: xFrameOptions,\n  hidePoweredBy: xPoweredBy,\n  hsts: strictTransportSecurity,\n  ieNoOpen: xDownloadOptions,\n  noSniff: xContentTypeOptions,\n  originAgentCluster,\n  permittedCrossDomainPolicies: xPermittedCrossDomainPolicies,\n  referrerPolicy,\n  xssFilter: xXssProtection\n});\nexport { contentSecurityPolicy, crossOriginEmbedderPolicy, crossOriginOpenerPolicy, crossOriginResourcePolicy, helmet as default, xDnsPrefetchControl as dnsPrefetchControl, expectCt, xFrameOptions as frameguard, xPoweredBy as hidePoweredBy, strictTransportSecurity as hsts, xDownloadOptions as ieNoOpen, xContentTypeOptions as noSniff, originAgentCluster, xPermittedCrossDomainPolicies as permittedCrossDomainPolicies, referrerPolicy, xXssProtection as xssFilter };","map":{"version":3,"names":["dangerouslyDisableDefaultSrc","Symbol","DEFAULT_DIRECTIVES","getDefaultDirectives","Object","assign","dashify","str","replace","capitalLetter","toLowerCase","isDirectiveValueInvalid","directiveValue","test","has","obj","key","prototype","hasOwnProperty","call","normalizeDirectives","options","defaultDirectives","useDefaults","directives","rawDirectives","result","Map","directiveNamesSeen","Set","directivesExplicitlyDisabled","rawDirectiveName","length","Error","JSON","stringify","directiveName","add","rawDirectiveValue","element","set","entries","forEach","defaultDirectiveName","defaultDirectiveValue","size","getHeaderValue","req","res","normalizedDirectives","err","Function","push","join","contentSecurityPolicy","headerName","reportOnly","contentSecurityPolicyMiddleware","next","setHeader","ALLOWED_POLICIES$2","getHeaderValueFromOptions$7","policy","crossOriginEmbedderPolicy","headerValue","crossOriginEmbedderPolicyMiddleware","_req","ALLOWED_POLICIES$1","getHeaderValueFromOptions$6","crossOriginOpenerPolicy","crossOriginOpenerPolicyMiddleware","ALLOWED_POLICIES","getHeaderValueFromOptions$5","crossOriginResourcePolicy","crossOriginResourcePolicyMiddleware","parseMaxAge$1","value","Number","isFinite","Math","floor","getHeaderValueFromOptions$4","maxAge","enforce","reportUri","expectCt","expectCtMiddleware","originAgentCluster","originAgentClusterMiddleware","ALLOWED_TOKENS","getHeaderValueFromOptions$3","tokens","tokensSeen","token","referrerPolicy","referrerPolicyMiddleware","DEFAULT_MAX_AGE","parseMaxAge","getHeaderValueFromOptions$2","console","warn","includeSubDomains","undefined","preload","strictTransportSecurity","strictTransportSecurityMiddleware","xContentTypeOptions","xContentTypeOptionsMiddleware","xDnsPrefetchControl","allow","xDnsPrefetchControlMiddleware","xDownloadOptions","xDownloadOptionsMiddleware","getHeaderValueFromOptions$1","action","normalizedAction","toUpperCase","xFrameOptions","xFrameOptionsMiddleware","ALLOWED_PERMITTED_POLICIES","getHeaderValueFromOptions","permittedPolicies","xPermittedCrossDomainPolicies","xPermittedCrossDomainPoliciesMiddleware","xPoweredBy","xPoweredByMiddleware","removeHeader","xXssProtection","xXssProtectionMiddleware","getArgs","option","middlewareConfig","takesOptions","name","getMiddlewareFunctionsFromOptions","contentSecurityPolicyArgs","crossOriginEmbedderPolicyArgs","crossOriginOpenerPolicyArgs","crossOriginResourcePolicyArgs","xDnsPrefetchControlArgs","dnsPrefetchControl","expectCtArgs","xFrameOptionsArgs","frameguard","xPoweredByArgs","hidePoweredBy","strictTransportSecurityArgs","hsts","xDownloadOptionsArgs","ieNoOpen","xContentTypeOptionsArgs","noSniff","originAgentClusterArgs","xPermittedCrossDomainPoliciesArgs","permittedCrossDomainPolicies","referrerPolicyArgs","xXssProtectionArgs","xssFilter","helmet","_a","constructor","middlewareFunctions","helmetMiddleware","middlewareIndex","internalNext","middlewareFunction","default"],"sources":["C:/Users/Lele/Desktop/Briscola/node_modules/helmet/dist/esm/index.js"],"sourcesContent":["const dangerouslyDisableDefaultSrc = Symbol(\"dangerouslyDisableDefaultSrc\")\nconst DEFAULT_DIRECTIVES = {\n\t\"default-src\": [\"'self'\"],\n\t\"base-uri\": [\"'self'\"],\n\t\"font-src\": [\"'self'\", \"https:\", \"data:\"],\n\t\"form-action\": [\"'self'\"],\n\t\"frame-ancestors\": [\"'self'\"],\n\t\"img-src\": [\"'self'\", \"data:\"],\n\t\"object-src\": [\"'none'\"],\n\t\"script-src\": [\"'self'\"],\n\t\"script-src-attr\": [\"'none'\"],\n\t\"style-src\": [\"'self'\", \"https:\", \"'unsafe-inline'\"],\n\t\"upgrade-insecure-requests\": []\n}\nconst getDefaultDirectives = () => Object.assign({}, DEFAULT_DIRECTIVES)\nconst dashify = str => str.replace(/[A-Z]/g, capitalLetter => \"-\" + capitalLetter.toLowerCase())\nconst isDirectiveValueInvalid = directiveValue => /;|,/.test(directiveValue)\nconst has = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\nfunction normalizeDirectives(options) {\n\tconst defaultDirectives = getDefaultDirectives()\n\tconst { useDefaults = true, directives: rawDirectives = defaultDirectives } = options\n\tconst result = new Map()\n\tconst directiveNamesSeen = new Set()\n\tconst directivesExplicitlyDisabled = new Set()\n\tfor (const rawDirectiveName in rawDirectives) {\n\t\tif (!has(rawDirectives, rawDirectiveName)) {\n\t\t\tcontinue\n\t\t}\n\t\tif (rawDirectiveName.length === 0 || /[^a-zA-Z0-9-]/.test(rawDirectiveName)) {\n\t\t\tthrow new Error(`Content-Security-Policy received an invalid directive name ${JSON.stringify(rawDirectiveName)}`)\n\t\t}\n\t\tconst directiveName = dashify(rawDirectiveName)\n\t\tif (directiveNamesSeen.has(directiveName)) {\n\t\t\tthrow new Error(`Content-Security-Policy received a duplicate directive ${JSON.stringify(directiveName)}`)\n\t\t}\n\t\tdirectiveNamesSeen.add(directiveName)\n\t\tconst rawDirectiveValue = rawDirectives[rawDirectiveName]\n\t\tlet directiveValue\n\t\tif (rawDirectiveValue === null) {\n\t\t\tif (directiveName === \"default-src\") {\n\t\t\t\tthrow new Error(\"Content-Security-Policy needs a default-src but it was set to `null`. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\")\n\t\t\t}\n\t\t\tdirectivesExplicitlyDisabled.add(directiveName)\n\t\t\tcontinue\n\t\t} else if (typeof rawDirectiveValue === \"string\") {\n\t\t\tdirectiveValue = [rawDirectiveValue]\n\t\t} else if (!rawDirectiveValue) {\n\t\t\tthrow new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`)\n\t\t} else if (rawDirectiveValue === dangerouslyDisableDefaultSrc) {\n\t\t\tif (directiveName === \"default-src\") {\n\t\t\t\tdirectivesExplicitlyDisabled.add(\"default-src\")\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Content-Security-Policy: tried to disable ${JSON.stringify(directiveName)} as if it were default-src; simply omit the key`)\n\t\t\t}\n\t\t} else {\n\t\t\tdirectiveValue = rawDirectiveValue\n\t\t}\n\t\tfor (const element of directiveValue) {\n\t\t\tif (typeof element === \"string\" && isDirectiveValueInvalid(element)) {\n\t\t\t\tthrow new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`)\n\t\t\t}\n\t\t}\n\t\tresult.set(directiveName, directiveValue)\n\t}\n\tif (useDefaults) {\n\t\tObject.entries(defaultDirectives).forEach(([defaultDirectiveName, defaultDirectiveValue]) => {\n\t\t\tif (!result.has(defaultDirectiveName) && !directivesExplicitlyDisabled.has(defaultDirectiveName)) {\n\t\t\t\tresult.set(defaultDirectiveName, defaultDirectiveValue)\n\t\t\t}\n\t\t})\n\t}\n\tif (!result.size) {\n\t\tthrow new Error(\"Content-Security-Policy has no directives. Either set some or disable the header\")\n\t}\n\tif (!result.has(\"default-src\") && !directivesExplicitlyDisabled.has(\"default-src\")) {\n\t\tthrow new Error(\"Content-Security-Policy needs a default-src but none was provided. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\")\n\t}\n\treturn result\n}\nfunction getHeaderValue(req, res, normalizedDirectives) {\n\tlet err\n\tconst result = []\n\tnormalizedDirectives.forEach((rawDirectiveValue, directiveName) => {\n\t\tlet directiveValue = \"\"\n\t\tfor (const element of rawDirectiveValue) {\n\t\t\tdirectiveValue += \" \" + (element instanceof Function ? element(req, res) : element)\n\t\t}\n\t\tif (!directiveValue) {\n\t\t\tresult.push(directiveName)\n\t\t} else if (isDirectiveValueInvalid(directiveValue)) {\n\t\t\terr = new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`)\n\t\t} else {\n\t\t\tresult.push(`${directiveName}${directiveValue}`)\n\t\t}\n\t})\n\treturn err ? err : result.join(\";\")\n}\nconst contentSecurityPolicy = function contentSecurityPolicy(options = {}) {\n\tconst headerName = options.reportOnly ? \"Content-Security-Policy-Report-Only\" : \"Content-Security-Policy\"\n\tconst normalizedDirectives = normalizeDirectives(options)\n\treturn function contentSecurityPolicyMiddleware(req, res, next) {\n\t\tconst result = getHeaderValue(req, res, normalizedDirectives)\n\t\tif (result instanceof Error) {\n\t\t\tnext(result)\n\t\t} else {\n\t\t\tres.setHeader(headerName, result)\n\t\t\tnext()\n\t\t}\n\t}\n}\ncontentSecurityPolicy.getDefaultDirectives = getDefaultDirectives\ncontentSecurityPolicy.dangerouslyDisableDefaultSrc = dangerouslyDisableDefaultSrc\n\nconst ALLOWED_POLICIES$2 = new Set([\"require-corp\", \"credentialless\"])\nfunction getHeaderValueFromOptions$7({ policy = \"require-corp\" }) {\n\tif (ALLOWED_POLICIES$2.has(policy)) {\n\t\treturn policy\n\t} else {\n\t\tthrow new Error(`Cross-Origin-Embedder-Policy does not support the ${JSON.stringify(policy)} policy`)\n\t}\n}\nfunction crossOriginEmbedderPolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$7(options)\n\treturn function crossOriginEmbedderPolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Cross-Origin-Embedder-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_POLICIES$1 = new Set([\"same-origin\", \"same-origin-allow-popups\", \"unsafe-none\"])\nfunction getHeaderValueFromOptions$6({ policy = \"same-origin\" }) {\n\tif (ALLOWED_POLICIES$1.has(policy)) {\n\t\treturn policy\n\t} else {\n\t\tthrow new Error(`Cross-Origin-Opener-Policy does not support the ${JSON.stringify(policy)} policy`)\n\t}\n}\nfunction crossOriginOpenerPolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$6(options)\n\treturn function crossOriginOpenerPolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Cross-Origin-Opener-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_POLICIES = new Set([\"same-origin\", \"same-site\", \"cross-origin\"])\nfunction getHeaderValueFromOptions$5({ policy = \"same-origin\" }) {\n\tif (ALLOWED_POLICIES.has(policy)) {\n\t\treturn policy\n\t} else {\n\t\tthrow new Error(`Cross-Origin-Resource-Policy does not support the ${JSON.stringify(policy)} policy`)\n\t}\n}\nfunction crossOriginResourcePolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$5(options)\n\treturn function crossOriginResourcePolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Cross-Origin-Resource-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction parseMaxAge$1(value = 0) {\n\tif (value >= 0 && Number.isFinite(value)) {\n\t\treturn Math.floor(value)\n\t} else {\n\t\tthrow new Error(`Expect-CT: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`)\n\t}\n}\nfunction getHeaderValueFromOptions$4(options) {\n\tconst directives = [`max-age=${parseMaxAge$1(options.maxAge)}`]\n\tif (options.enforce) {\n\t\tdirectives.push(\"enforce\")\n\t}\n\tif (options.reportUri) {\n\t\tdirectives.push(`report-uri=\"${options.reportUri}\"`)\n\t}\n\treturn directives.join(\", \")\n}\nfunction expectCt(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$4(options)\n\treturn function expectCtMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Expect-CT\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction originAgentCluster() {\n\treturn function originAgentClusterMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Origin-Agent-Cluster\", \"?1\")\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_TOKENS = new Set([\"no-referrer\", \"no-referrer-when-downgrade\", \"same-origin\", \"origin\", \"strict-origin\", \"origin-when-cross-origin\", \"strict-origin-when-cross-origin\", \"unsafe-url\", \"\"])\nfunction getHeaderValueFromOptions$3({ policy = [\"no-referrer\"] }) {\n\tconst tokens = typeof policy === \"string\" ? [policy] : policy\n\tif (tokens.length === 0) {\n\t\tthrow new Error(\"Referrer-Policy received no policy tokens\")\n\t}\n\tconst tokensSeen = new Set()\n\ttokens.forEach(token => {\n\t\tif (!ALLOWED_TOKENS.has(token)) {\n\t\t\tthrow new Error(`Referrer-Policy received an unexpected policy token ${JSON.stringify(token)}`)\n\t\t} else if (tokensSeen.has(token)) {\n\t\t\tthrow new Error(`Referrer-Policy received a duplicate policy token ${JSON.stringify(token)}`)\n\t\t}\n\t\ttokensSeen.add(token)\n\t})\n\treturn tokens.join(\",\")\n}\nfunction referrerPolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$3(options)\n\treturn function referrerPolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Referrer-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst DEFAULT_MAX_AGE = 180 * 24 * 60 * 60\nfunction parseMaxAge(value = DEFAULT_MAX_AGE) {\n\tif (value >= 0 && Number.isFinite(value)) {\n\t\treturn Math.floor(value)\n\t} else {\n\t\tthrow new Error(`Strict-Transport-Security: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`)\n\t}\n}\nfunction getHeaderValueFromOptions$2(options) {\n\tif (\"maxage\" in options) {\n\t\tthrow new Error(\"Strict-Transport-Security received an unsupported property, `maxage`. Did you mean to pass `maxAge`?\")\n\t}\n\tif (\"includeSubdomains\" in options) {\n\t\tconsole.warn('Strict-Transport-Security middleware should use `includeSubDomains` instead of `includeSubdomains`. (The correct one has an uppercase \"D\".)')\n\t}\n\tif (\"setIf\" in options) {\n\t\tconsole.warn(\"Strict-Transport-Security middleware no longer supports the `setIf` parameter. See the documentation and <https://github.com/helmetjs/helmet/wiki/Conditionally-using-middleware> if you need help replicating this behavior.\")\n\t}\n\tconst directives = [`max-age=${parseMaxAge(options.maxAge)}`]\n\tif (options.includeSubDomains === undefined || options.includeSubDomains) {\n\t\tdirectives.push(\"includeSubDomains\")\n\t}\n\tif (options.preload) {\n\t\tdirectives.push(\"preload\")\n\t}\n\treturn directives.join(\"; \")\n}\nfunction strictTransportSecurity(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$2(options)\n\treturn function strictTransportSecurityMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Strict-Transport-Security\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction xContentTypeOptions() {\n\treturn function xContentTypeOptionsMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Content-Type-Options\", \"nosniff\")\n\t\tnext()\n\t}\n}\n\nfunction xDnsPrefetchControl(options = {}) {\n\tconst headerValue = options.allow ? \"on\" : \"off\"\n\treturn function xDnsPrefetchControlMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-DNS-Prefetch-Control\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction xDownloadOptions() {\n\treturn function xDownloadOptionsMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Download-Options\", \"noopen\")\n\t\tnext()\n\t}\n}\n\nfunction getHeaderValueFromOptions$1({ action = \"sameorigin\" }) {\n\tconst normalizedAction = typeof action === \"string\" ? action.toUpperCase() : action\n\tswitch (normalizedAction) {\n\t\tcase \"SAME-ORIGIN\":\n\t\t\treturn \"SAMEORIGIN\"\n\t\tcase \"DENY\":\n\t\tcase \"SAMEORIGIN\":\n\t\t\treturn normalizedAction\n\t\tdefault:\n\t\t\tthrow new Error(`X-Frame-Options received an invalid action ${JSON.stringify(action)}`)\n\t}\n}\nfunction xFrameOptions(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$1(options)\n\treturn function xFrameOptionsMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Frame-Options\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_PERMITTED_POLICIES = new Set([\"none\", \"master-only\", \"by-content-type\", \"all\"])\nfunction getHeaderValueFromOptions({ permittedPolicies = \"none\" }) {\n\tif (ALLOWED_PERMITTED_POLICIES.has(permittedPolicies)) {\n\t\treturn permittedPolicies\n\t} else {\n\t\tthrow new Error(`X-Permitted-Cross-Domain-Policies does not support ${JSON.stringify(permittedPolicies)}`)\n\t}\n}\nfunction xPermittedCrossDomainPolicies(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions(options)\n\treturn function xPermittedCrossDomainPoliciesMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Permitted-Cross-Domain-Policies\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction xPoweredBy() {\n\treturn function xPoweredByMiddleware(_req, res, next) {\n\t\tres.removeHeader(\"X-Powered-By\")\n\t\tnext()\n\t}\n}\n\nfunction xXssProtection() {\n\treturn function xXssProtectionMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-XSS-Protection\", \"0\")\n\t\tnext()\n\t}\n}\n\nfunction getArgs(option, middlewareConfig = {}) {\n\tswitch (option) {\n\t\tcase undefined:\n\t\tcase true:\n\t\t\treturn []\n\t\tcase false:\n\t\t\treturn null\n\t\tdefault:\n\t\t\tif (middlewareConfig.takesOptions === false) {\n\t\t\t\tconsole.warn(`${middlewareConfig.name} does not take options. Remove the property to silence this warning.`)\n\t\t\t\treturn []\n\t\t\t} else {\n\t\t\t\treturn [option]\n\t\t\t}\n\t}\n}\nfunction getMiddlewareFunctionsFromOptions(options) {\n\tconst result = []\n\tconst contentSecurityPolicyArgs = getArgs(options.contentSecurityPolicy)\n\tif (contentSecurityPolicyArgs) {\n\t\tresult.push(contentSecurityPolicy(...contentSecurityPolicyArgs))\n\t}\n\tconst crossOriginEmbedderPolicyArgs = getArgs(options.crossOriginEmbedderPolicy, {\n\t\tname: \"crossOriginEmbedderPolicy\",\n\t\ttakesOptions: false\n\t})\n\tif (crossOriginEmbedderPolicyArgs) {\n\t\tresult.push(crossOriginEmbedderPolicy())\n\t}\n\tconst crossOriginOpenerPolicyArgs = getArgs(options.crossOriginOpenerPolicy)\n\tif (crossOriginOpenerPolicyArgs) {\n\t\tresult.push(crossOriginOpenerPolicy(...crossOriginOpenerPolicyArgs))\n\t}\n\tconst crossOriginResourcePolicyArgs = getArgs(options.crossOriginResourcePolicy)\n\tif (crossOriginResourcePolicyArgs) {\n\t\tresult.push(crossOriginResourcePolicy(...crossOriginResourcePolicyArgs))\n\t}\n\tconst xDnsPrefetchControlArgs = getArgs(options.dnsPrefetchControl)\n\tif (xDnsPrefetchControlArgs) {\n\t\tresult.push(xDnsPrefetchControl(...xDnsPrefetchControlArgs))\n\t}\n\tconst expectCtArgs = options.expectCt && getArgs(options.expectCt)\n\tif (expectCtArgs) {\n\t\tresult.push(expectCt(...expectCtArgs))\n\t}\n\tconst xFrameOptionsArgs = getArgs(options.frameguard)\n\tif (xFrameOptionsArgs) {\n\t\tresult.push(xFrameOptions(...xFrameOptionsArgs))\n\t}\n\tconst xPoweredByArgs = getArgs(options.hidePoweredBy, {\n\t\tname: \"hidePoweredBy\",\n\t\ttakesOptions: false\n\t})\n\tif (xPoweredByArgs) {\n\t\tresult.push(xPoweredBy())\n\t}\n\tconst strictTransportSecurityArgs = getArgs(options.hsts)\n\tif (strictTransportSecurityArgs) {\n\t\tresult.push(strictTransportSecurity(...strictTransportSecurityArgs))\n\t}\n\tconst xDownloadOptionsArgs = getArgs(options.ieNoOpen, {\n\t\tname: \"ieNoOpen\",\n\t\ttakesOptions: false\n\t})\n\tif (xDownloadOptionsArgs) {\n\t\tresult.push(xDownloadOptions())\n\t}\n\tconst xContentTypeOptionsArgs = getArgs(options.noSniff, {\n\t\tname: \"noSniff\",\n\t\ttakesOptions: false\n\t})\n\tif (xContentTypeOptionsArgs) {\n\t\tresult.push(xContentTypeOptions())\n\t}\n\tconst originAgentClusterArgs = getArgs(options.originAgentCluster, {\n\t\tname: \"originAgentCluster\",\n\t\ttakesOptions: false\n\t})\n\tif (originAgentClusterArgs) {\n\t\tresult.push(originAgentCluster())\n\t}\n\tconst xPermittedCrossDomainPoliciesArgs = getArgs(options.permittedCrossDomainPolicies)\n\tif (xPermittedCrossDomainPoliciesArgs) {\n\t\tresult.push(xPermittedCrossDomainPolicies(...xPermittedCrossDomainPoliciesArgs))\n\t}\n\tconst referrerPolicyArgs = getArgs(options.referrerPolicy)\n\tif (referrerPolicyArgs) {\n\t\tresult.push(referrerPolicy(...referrerPolicyArgs))\n\t}\n\tconst xXssProtectionArgs = getArgs(options.xssFilter, {\n\t\tname: \"xssFilter\",\n\t\ttakesOptions: false\n\t})\n\tif (xXssProtectionArgs) {\n\t\tresult.push(xXssProtection())\n\t}\n\treturn result\n}\nconst helmet = Object.assign(\n\tfunction helmet(options = {}) {\n\t\tvar _a\n\t\tif (((_a = options.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"IncomingMessage\") {\n\t\t\tthrow new Error(\"It appears you have done something like `app.use(helmet)`, but it should be `app.use(helmet())`.\")\n\t\t}\n\t\tconst middlewareFunctions = getMiddlewareFunctionsFromOptions(options)\n\t\treturn function helmetMiddleware(req, res, next) {\n\t\t\tlet middlewareIndex = 0\n\t\t\t;(function internalNext(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tnext(err)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst middlewareFunction = middlewareFunctions[middlewareIndex]\n\t\t\t\tif (middlewareFunction) {\n\t\t\t\t\tmiddlewareIndex++\n\t\t\t\t\tmiddlewareFunction(req, res, internalNext)\n\t\t\t\t} else {\n\t\t\t\t\tnext()\n\t\t\t\t}\n\t\t\t})()\n\t\t}\n\t},\n\t{\n\t\tcontentSecurityPolicy,\n\t\tcrossOriginEmbedderPolicy,\n\t\tcrossOriginOpenerPolicy,\n\t\tcrossOriginResourcePolicy,\n\t\tdnsPrefetchControl: xDnsPrefetchControl,\n\t\texpectCt,\n\t\tframeguard: xFrameOptions,\n\t\thidePoweredBy: xPoweredBy,\n\t\thsts: strictTransportSecurity,\n\t\tieNoOpen: xDownloadOptions,\n\t\tnoSniff: xContentTypeOptions,\n\t\toriginAgentCluster,\n\t\tpermittedCrossDomainPolicies: xPermittedCrossDomainPolicies,\n\t\treferrerPolicy,\n\t\txssFilter: xXssProtection\n\t}\n)\n\nexport { contentSecurityPolicy, crossOriginEmbedderPolicy, crossOriginOpenerPolicy, crossOriginResourcePolicy, helmet as default, xDnsPrefetchControl as dnsPrefetchControl, expectCt, xFrameOptions as frameguard, xPoweredBy as hidePoweredBy, strictTransportSecurity as hsts, xDownloadOptions as ieNoOpen, xContentTypeOptions as noSniff, originAgentCluster, xPermittedCrossDomainPolicies as permittedCrossDomainPolicies, referrerPolicy, xXssProtection as xssFilter }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
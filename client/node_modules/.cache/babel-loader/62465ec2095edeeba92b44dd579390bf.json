{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loreb\\\\Documents\\\\Unipr\\\\Terzo_anno\\\\Primo_semestre\\\\Tecnologie_internet\\\\Briscola\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this));\nvar idPartita = 0;\nsocket.on('connect', () => {\n  window.alert(`Client connesso con id ${socket.id}`);\n  socket.on('partitaIniziata', (partita, mano) => {\n    idPartita = partita.IdPartita; // memorizziamo nel client l'id della partita\n\n    window.alert(idPartita);\n    /*\n    for (i = 0; i < partita.Mazzo.length; i++){\n      \n    }\n    */\n  });\n});\nexport function cartaGiocata(id) {\n  window.alert(id);\n\n  if (socket.connected) {\n    // verifichiamo di essere connessi prima di inviare il click\n    socket.emit(\"cartaGiocata\");\n  }\n}\nexport function startGame(modalità) {\n  socket.emit('startGame', modalità); // Nell'attesa della risposta (evento socket partitaIniziata) si potrebbe rendere visibile il simbolo di attesa\n}\nexport function login() {\n  var email = document.getElementById(\"exampleInputEmail1\").nodeValue;\n  window.alert(email);\n  var password = document.getElementById(\"exampleInputPassword1\").nodeValue;\n  window.alert(password);\n} // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","io","socket","root","createRoot","document","getElementById","render","idPartita","on","window","alert","id","partita","mano","IdPartita","cartaGiocata","connected","emit","startGame","modalità","login","email","nodeValue","password"],"sources":["C:/Users/loreb/Documents/Unipr/Terzo_anno/Primo_semestre/Tecnologie_internet/Briscola/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport { io } from 'socket.io-client'\n\nconst socket = io('http://localhost:3001')\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\nvar idPartita = 0;\n\nsocket.on('connect', () => {\n  window.alert(`Client connesso con id ${socket.id}`)\n  socket.on('partitaIniziata',(partita, mano) => {\n    idPartita = partita.IdPartita;      // memorizziamo nel client l'id della partita\n    window.alert(idPartita)\n    \n    /*\n    for (i = 0; i < partita.Mazzo.length; i++){\n      \n    }\n    */\n  })\n})\n\nexport function cartaGiocata(id){\n  window.alert(id);\n  if (socket.connected){    // verifichiamo di essere connessi prima di inviare il click\n    socket.emit(\"cartaGiocata\", )\n  }\n}\n\nexport function startGame(modalità){\n  socket.emit('startGame', modalità);\n  // Nell'attesa della risposta (evento socket partitaIniziata) si potrebbe rendere visibile il simbolo di attesa\n}\n\nexport function login(){\n  var email = document.getElementById(\"exampleInputEmail1\").nodeValue;\n  window.alert(email)\n  var password = document.getElementById(\"exampleInputPassword1\").nodeValue;\n  window.alert(password)\n   \n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;AAEA,MAAME,IAAI,GAAGN,QAAQ,CAACO,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,aAAD;EAAA,uBACE,QAAC,KAAD,CAAO,UAAP;IAAA,uBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF;AAQA,IAAIC,SAAS,GAAG,CAAhB;AAEAN,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,MAAM;EACzBC,MAAM,CAACC,KAAP,CAAc,0BAAyBT,MAAM,CAACU,EAAG,EAAjD;EACAV,MAAM,CAACO,EAAP,CAAU,iBAAV,EAA4B,CAACI,OAAD,EAAUC,IAAV,KAAmB;IAC7CN,SAAS,GAAGK,OAAO,CAACE,SAApB,CAD6C,CACT;;IACpCL,MAAM,CAACC,KAAP,CAAaH,SAAb;IAEA;AACJ;AACA;AACA;AACA;EACG,CATD;AAUD,CAZD;AAcA,OAAO,SAASQ,YAAT,CAAsBJ,EAAtB,EAAyB;EAC9BF,MAAM,CAACC,KAAP,CAAaC,EAAb;;EACA,IAAIV,MAAM,CAACe,SAAX,EAAqB;IAAK;IACxBf,MAAM,CAACgB,IAAP,CAAY,cAAZ;EACD;AACF;AAED,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA4B;EACjClB,MAAM,CAACgB,IAAP,CAAY,WAAZ,EAAyBE,QAAzB,EADiC,CAEjC;AACD;AAED,OAAO,SAASC,KAAT,GAAgB;EACrB,IAAIC,KAAK,GAAGjB,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CiB,SAA1D;EACAb,MAAM,CAACC,KAAP,CAAaW,KAAb;EACA,IAAIE,QAAQ,GAAGnB,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDiB,SAAhE;EACAb,MAAM,CAACC,KAAP,CAAaa,QAAb;AAED,C,CAGD;AACA;AACA;;AACAzB,eAAe"},"metadata":{},"sourceType":"module"}